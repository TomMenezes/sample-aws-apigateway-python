AWSTemplateFormatVersion: 2010-09-09
Description: "Template lambda to get all movies"
Parameters:
  APIStackName:
    Type: String
    Default: stack-api-movie
  StructureStackName:
    Type: String
    Default: stack-api-movie-structure
  AuthorizeStackName:
    Type: String
    Default: stack-api-movie-authorize
  LambdaName:
    Type: String
    Default: lambda-api-movie-getall

Resources:
  APIGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: CUSTOM
      AuthorizerId:
        Fn::ImportValue:
          Fn::Sub: "${AuthorizeStackName}-AuthorizeId"
      HttpMethod: GET
      RestApiId:
        Fn::ImportValue:
          Fn::Sub: "${APIStackName}-APIGateway"
      ResourceId:
        Fn::ImportValue:
          Fn::Sub: "${APIStackName}-APIGatewayResourceMovie"
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        
        Uri: !Join 
        - ''
        - - 'arn:aws:apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - !GetAtt LambdaFunction.Arn
          - :${stageVariables.stageAlias}
          - /invocations
      MethodResponses:
        - 
          StatusCode: 200
          ResponseModels:
            'application/json; charset=utf-8;': Empty

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: 
          ZipFile: |
            import json

            def main_handler(event, context):
                return {
                    "statusCode": 200,
                    "body": json.dumps('Cheers from AWS Lambda!!')
                }
      Description: "Lambda to get all movies"
      FunctionName: !Ref LambdaName
      Handler: "index.main_handler"
      MemorySize: 256
      Role:
        Fn::ImportValue:
          Fn::Sub: "${StructureStackName}-LambdaRoleArn"
      Runtime: python3.9
      Timeout: 30

  Alias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref LambdaFunction
      FunctionVersion: $LATEST
      Name: v1

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    DependsOn: 
      - Alias
    Properties:
      FunctionName: !Sub ${LambdaFunction}:v1
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${APIGatewayName}/*/GET/api/movie
        - APIGatewayName: 
            Fn::ImportValue:
              Fn::Sub: "${APIStackName}-APIGateway"
